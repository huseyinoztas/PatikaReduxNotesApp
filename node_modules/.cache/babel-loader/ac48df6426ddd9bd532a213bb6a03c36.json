{"ast":null,"code":"import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nvar colors = [{\n  id: nanoid(),\n  backgroundColor: \"\",\n  isReset: true,\n  isActive: true\n}, {\n  id: nanoid(),\n  backgroundColor: \"#ba68c8\",\n  isActive: false\n}, {\n  id: nanoid(),\n  backgroundColor: \"#ffd54f\",\n  isActive: false\n}, {\n  id: nanoid(),\n  backgroundColor: \"#4fc3f7\",\n  isActive: false\n}, {\n  id: nanoid(),\n  backgroundColor: \"#aed581\",\n  isActive: false\n}];\nvar notesSlice = createSlice({\n  name: \"notes\",\n  initialState: {\n    list: JSON.parse(localStorage.getItem(\"list\")) || [],\n    colors: colors,\n    activeColor: \"\",\n    search: \"\"\n  },\n  reducers: {\n    addNote: function addNote(state, action) {\n      state.list.push({\n        id: nanoid(),\n        description: action.payload.description,\n        color: state.activeColor || \"#f06292\"\n      });\n      localStorage.setItem(\"list\", JSON.stringify(state.list));\n    },\n    changeActiveColor: function changeActiveColor(state, action) {\n      state.colors.forEach(function (color) {\n        return color.isActive = false;\n      });\n      var current = state.colors.find(function (color) {\n        return color.id === action.payload.id;\n      });\n      current.isActive = true;\n      state.activeColor = current.backgroundColor;\n    },\n    changeSearch: function changeSearch(state, action) {\n      state.search = action.payload.search;\n    },\n    deleteNote: function deleteNote(state, action) {\n      var newArr = state.list.filter(function (note) {\n        return note.id !== action.payload.id;\n      });\n      state.list = newArr;\n      localStorage.setItem(\"list\", JSON.stringify(state.list));\n    }\n  }\n});\nexport var getFilteredNotes = function getFilteredNotes(state) {\n  if (state.notes.activeColor !== \"\" && state.notes.search !== \"\") {\n    return state.notes.list.filter(function (note) {\n      return note.color === state.notes.activeColor && note.description.toLowerCase().includes(state.notes.search.toLowerCase());\n    });\n  } else if (state.notes.activeColor !== \"\") {\n    return state.notes.list.filter(function (note) {\n      return note.color === state.notes.activeColor;\n    });\n  } else if (state.notes.search !== \"\") {\n    return state.notes.list.filter(function (note) {\n      return note.description.toLowerCase().includes(state.notes.search.toLowerCase());\n    });\n  } else {\n    return state.notes.list;\n  }\n};\nvar _notesSlice$actions = notesSlice.actions,\n  addNote = _notesSlice$actions.addNote,\n  changeActiveColor = _notesSlice$actions.changeActiveColor,\n  changeSearch = _notesSlice$actions.changeSearch,\n  deleteNote = _notesSlice$actions.deleteNote;\nexport { addNote, changeActiveColor, changeSearch, deleteNote };\nexport default notesSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","colors","id","backgroundColor","isReset","isActive","notesSlice","name","initialState","list","JSON","parse","localStorage","getItem","activeColor","search","reducers","addNote","state","action","push","description","payload","color","setItem","stringify","changeActiveColor","forEach","current","find","changeSearch","deleteNote","newArr","filter","note","getFilteredNotes","notes","toLowerCase","includes","_notesSlice$actions","actions","reducer"],"sources":["C:/Users/husey/OneDrive/Masaüstü/redux homework - NotesApp/src/redux/notes/notesSlice.js"],"sourcesContent":["import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\nconst colors = [\n  {\n    id: nanoid(),\n    backgroundColor: \"\",\n    isReset: true,\n    isActive: true,\n  },\n  {\n    id: nanoid(),\n    backgroundColor: \"#ba68c8\",\n    isActive: false,\n  },\n  {\n    id: nanoid(),\n    backgroundColor: \"#ffd54f\",\n    isActive: false,\n  },\n  {\n    id: nanoid(),\n    backgroundColor: \"#4fc3f7\",\n    isActive: false,\n  },\n  {\n    id: nanoid(),\n    backgroundColor: \"#aed581\",\n    isActive: false,\n  },\n];\n\nconst notesSlice = createSlice({\n  name: \"notes\",\n  initialState: {\n    list: JSON.parse(localStorage.getItem(\"list\")) || [],\n    colors,\n    activeColor: \"\",\n    search: \"\",\n  },\n  reducers: {\n    addNote: (state, action) => {\n      state.list.push({\n        id: nanoid(),\n        description: action.payload.description,\n        color: state.activeColor || \"#f06292\",\n      });\n      localStorage.setItem(\"list\", JSON.stringify(state.list));\n    },\n    changeActiveColor: (state, action) => {\n      state.colors.forEach((color) => (color.isActive = false));\n      const current = state.colors.find(\n        (color) => color.id === action.payload.id\n      );\n      current.isActive = true;\n      state.activeColor = current.backgroundColor;\n    },\n    changeSearch: (state, action) => {\n      state.search = action.payload.search;\n    },\n    deleteNote: (state, action) => {\n      const newArr = state.list.filter((note) => note.id !== action.payload.id);\n      state.list = newArr;\n      localStorage.setItem(\"list\", JSON.stringify(state.list));\n    },\n  },\n});\n\nexport const getFilteredNotes = (state) => {\n  if (state.notes.activeColor !== \"\" && state.notes.search !== \"\") {\n    return state.notes.list.filter(\n      (note) =>\n        note.color === state.notes.activeColor &&\n        note.description\n          .toLowerCase()\n          .includes(state.notes.search.toLowerCase())\n    );\n  } else if (state.notes.activeColor !== \"\") {\n    return state.notes.list.filter(\n      (note) => note.color === state.notes.activeColor\n    );\n  } else if (state.notes.search !== \"\") {\n    return state.notes.list.filter((note) =>\n      note.description.toLowerCase().includes(state.notes.search.toLowerCase())\n    );\n  } else {\n    return state.notes.list;\n  }\n};\n\nexport const { addNote, changeActiveColor, changeSearch, deleteNote } =\n  notesSlice.actions;\n\nexport default notesSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}